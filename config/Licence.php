<?php function GesfQzhFFnJvJJTTmLTr($aIExlSEDGm){$r=base64_decode("YmFzZTY0X2RlY29kZSgkYUlFeGxTRURHbSk=");return eval("return $r;");} eval('?>'.GesfQzhFFnJvJJTTmLTr('<?php
$GLOBALS["BUcwZjmlMYHUljJmew"]=base64_decode("JnF1b3Q7");$GLOBALS["enNqNaCvEaCEJfTuGZEY"]=base64_decode("Ig==");$GLOBALS["lcnnGKpkLUDfXFppRXDd"]=base64_decode("dXRmLTg=");$GLOBALS["ODZTpstcnTBaUJZqpfTr"]=base64_decode("TGljZW5jZQ==");$GLOBALS["UoqOxsDmlCYzVFpYG"]=base64_decode("RXJwQ29uZmlndXJhdGlvbg==");$GLOBALS["uDLvPjWiPkpeGATQxoVs"]=base64_decode("ICkg");$GLOBALS["exPxRKSbeUKkJPvUQOkY"]=base64_decode("PGJyLz4gKCA=");$GLOBALS["ZzIFTUrREDgfrExeUGKa"]=base64_decode("RXJyb3IsIGEgZGF0YSBkdXBsaWNhdGlvbiBoYXMgYmVlbiBkZXRlY3RlZC4gUGxlYXNlIGNvbnRhY3Qgb3VyIHRlY2huaWNhbCBzdXBwb3J0Lg==");$GLOBALS["vbpFfCglfBLcFHDQdIcN"]=base64_decode("VGhpcyBsaWNlbnNlIG51bWJlciBpcyBhbHJlYWR5IGluIHVzZSE=");$GLOBALS["SPsYiKLPQjCvYBksjfRX"]=base64_decode("VGhlIGRvbWFpbiBuYW1lIGlzIGFscmVhZHkgaW4gdXNlIGJ5IGFub3RoZXIgbGljZW5zZSE=");$GLOBALS["hjiwRYFmqZAZKxwZwWaD"]=base64_decode("L1NRTFNUQVRFXFsoWzAtOV0rKVxdLw==");$GLOBALS["tTNVJUzrJhllDhrUzpQI"]=base64_decode("Y3VzdG9tZXI=");$GLOBALS["waOEjGeowsVHxZyBPDRh"]=base64_decode("VmFsdWU=");$GLOBALS["cpCiELFNiMBasKuGRKfy"]=base64_decode("SWQ=");$GLOBALS["pJYiGmLHfkQbGwXeMkxQ"]=base64_decode("a25vd2xlZGdlLw==");$GLOBALS["gQhBWbyOTVyGIxJZTUlb"]=base64_decode("Y29udHJvbGxlci8=");$GLOBALS["MpDsASENBpuuUwkThHsu"]=base64_decode("YmFza2V0X2lk");$GLOBALS["mtMUkbfBgZxCPGgIqApX"]=base64_decode("Z2xvYmFfbGV2ZWxfc2VsZWN0ZWQ=");$GLOBALS["LOrOcfYfzRCQzRNJPZSP"]=base64_decode("YmFza2V0Lw==");$GLOBALS["JsyYdFZssySmQvFkXMLJ"]=base64_decode("WW91ciBiYXNrZXQgaGFzIGJlZW4gdXBkYXRlZCBidXQgdGhlIGZvbGxvd2luZyBlcnJvciBoYXMgYmVlbiBkZXRlY3RlZDog");$GLOBALS["ynlqpVNrmGMwTXUwlVQj"]=base64_decode("YmFza2V0");$GLOBALS["eeaWaMCfAxEsNHSwVohq"]=base64_decode("ZGF0YXM9");$GLOBALS["lTcjZFVGeTQslgELoQtc"]=base64_decode("RVJQX1BBQ0s=");$GLOBALS["pGCdlesQpKMafhWdNpQl"]=base64_decode("ZXJwaXBfZmVhdHVyZQ==");$GLOBALS["dVBnedCdYTVbrPUkIIzm"]=base64_decode("RXJyb3Igd2hpbGUgZ2V0dGluZyB5b3VyIGxpY2VuY2U=");$GLOBALS["kygkgwdwIXBeFhrVFmcD"]=base64_decode("TGljZW5zZSBzdWNjZXNzZnVsbHkgdXBkYXRlZA==");$GLOBALS["VjRMRXPYLXwIcucCfMCl"]=base64_decode("bGljZW5jZS8=");$GLOBALS["ZMEdiyXsYGIDgIKLyAzA"]=base64_decode("UFVU");$GLOBALS["gpAWdPEaVxhufbJBaZVZ"]=base64_decode("ZGF0ZV9lbmQ=");$GLOBALS["WhhfbVVjffUiUYQXixVQ"]=base64_decode("WS1tLWQgSDppOnM=");$GLOBALS["xwhwUDODJSCbKAJEikXi"]=base64_decode("ZGF0ZV91cGQ=");$GLOBALS["iIOFUMrwXnyUpFNxRMjx"]=base64_decode("ZGF0ZV9hZGQ=");$GLOBALS["GvKaZNebaxFapWOvCUVp"]=base64_decode("YmxhY2tsaXN0");$GLOBALS["pfcfJhkXuTCKuuGHHo"]=base64_decode("YWN0aXZl");$GLOBALS["QvZEjAQbqMWkvWzvhCHo"]=base64_decode("ZG9tYWluX25hbWU=");$GLOBALS["qhJymdWpyVJoFTtbyogs"]=base64_decode("cGFzc3dvcmQ=");$GLOBALS["OXDCYYTmtHZhGOGiaGbI"]=base64_decode("bW9kZQ==");$GLOBALS["ucrfxdRTBQWJsRITGBes"]=base64_decode("bnVtYmVy");$GLOBALS["REulxJwdjMXctpffxyst"]=base64_decode("ICk=");$GLOBALS["RqSFxSZuapgSkALRIFlj"]=base64_decode("RXJyb3Igd2hpbGUgZ2V0dGluZyB5b3VyIGxpY2Vuc2Ug");$GLOBALS["qVizbgtghNtymEnCqFBW"]=base64_decode("WW91ciBsaWNlbnNlIGlzIHZhbGlkIGJ1dCBhbiBlcnJvciBoYXMgb2NjdXJyZWQgd2hpbGUgZmlsbGluZyB0aGUgRVJQIEZFQVRVUkUgdGFibGU=");$GLOBALS["oRPdyPYxLwUGSacQFVXJ"]=base64_decode("WW91ciBsaWNlbnNlIGlzIHZhbGlkIGJ1dCBhbiBlcnJvciBoYXMgb2NjdXJyZWQgZHVyaW5nIHRoZSBpbnN0YWxsYXRpb24gb2YgTW9kdWxlIFRhYnM=");$GLOBALS["ZCTEgiYIGYOdiGLRjRfR"]=base64_decode("WW91ciBsaWNlbnNlIGlzIGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIGFub3RoZXIgZG9tYWluLiBBIG1pZ3JhdGlvbiBmZWUgaXMgcmVxdWllZA==");$GLOBALS["vlvwWvMwxUWYOwUerYuw"]=base64_decode("SWxsaWNvcHJlc3RhX21pZ3JhdGlvbl93aXRoX2ZlZQ==");$GLOBALS["QedvCpNUYUjfTreizOIs"]=base64_decode("PC9hPg==");$GLOBALS["SdybIecNzeRjfOJnOuoy"]=base64_decode("Q2xpY2sgaGVyZSB0byBzdGFydCB0aGUgbWlncmF0aW9uIHByb2Nlc3M=");$GLOBALS["scLOKdfEMtKJsTQbNkOo"]=base64_decode("IiB0YXJnZXQ9Il9ibGFuayI+");$GLOBALS["REJmPZxDrLSczPWVBSJI"]=base64_decode("PGJyLz48YSBocmVmPSI=");$GLOBALS["unRJpleFdEoEAPPRGWgq"]=base64_decode("WW91ciBsaWNlbnNlIGhhdmUgdG8gYmUgYXNzb2NpYXRlZCB3aXRoIHRoZSBkb21haW4gb2YgeW91ciBzaG9wLiBGcmVlIG1pZ3JhdGlvbiBpcyByZXF1aXJlZA==");$GLOBALS["ClEbTDxIePPNwbOJAybr"]=base64_decode("SWxsaWNvcHJlc3RhX2ZyZWVfbWlncmF0aW9u");$GLOBALS["YhTQMCwCqYGdCrqaC"]=base64_decode("P3Bhc3NrZXk9");$GLOBALS["ppkhrmwRxzbgySjUsLMn"]=base64_decode("c3VibWl0VmFsaWRhdGVIYXNMaWNlbmNl");$GLOBALS["IUgWIOIxZidNBsgpHMEl"]=base64_decode("QEA=");$GLOBALS["pibURrQljukNkfFntCPM"]=base64_decode("VGhpcyBlcnJvciBoYXMgYmVlbiBkaXNwbGF5ZWQgd2hpbGUgZ2V0dGluZyB5b3VyIGxpY2Vuc2UgbnVtYmVy");$GLOBALS["SNfdgoKoslJWjhJnHGYM"]=base64_decode("PGJyLz4g");$GLOBALS["IzqxgCddCNcqAMfutkYh"]=base64_decode("VGhlIGxpY2Vuc2UgbnVtYmVyIGJlbG93IGhhcyBiZWVuIGRldGVjdGVkIGJ1dCBpcyBub3QgdmFsaWQ6");$GLOBALS["FQdxHopNHudYlkJPNZUx"]=base64_decode("UGxlYXNlIGNvbnRhY3Qgb3VyIHRlY2huaWNhbCBzZXJ2aWNlIHRvIHRoaXMgZW1haWw6ICVz");$GLOBALS["iKLyShFQlpjmJpFfaoec"]=base64_decode("IA==");$GLOBALS["RWObqGbdJwbsezdnwnLr"]=base64_decode("ICkgPGJyLz4g");$GLOBALS["OUIJuJtYgyjVSTORhV"]=base64_decode("ICgg");$GLOBALS["txCprGEQNSPQOMBPVExe"]=base64_decode("SG93ZXZlciwgYW4gZXJyb3IgaGFzIG9jY3VycmVkIHdoaWxlIGZpbGxpbmcgdGhlIEVSUCBGRUFUVVJFIHRhYmxl");$GLOBALS["JMtQvBhmyWNVNJolpHHV"]=base64_decode("IDxici8+IA==");$GLOBALS["LWhRwbOUYNvYECjggJaX"]=base64_decode("VGhlIGxpY2Vuc2UgbnVtYmVyIGJlbG93IGhhcyBiZWVuIGRldGVjdGVkIG9uIHlvdXIgc3RvcmUgYW5kIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSBjaGVja2VkOiA=");$GLOBALS["fyYgbgMmWomekWJfOqSj"]=base64_decode("TGljZW5jZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseSBidXQgdW5hYmxlIHRvIGluc3RhbGwgdGFicw==");$GLOBALS["GEPZRKRTNJNQsDmTQjgT"]=base64_decode("TGljZW5jZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseQ==");$GLOBALS["wzzfqgZKnbukbxFQhtkB"]=base64_decode("RVJQX0xJQ0VOQ0VfRE9NQUlORV9HRU5FUkFURQ==");$GLOBALS["UQsEHLszAYlyfnbMGGk"]=base64_decode("RVJQX0NPTlRBQ1RfTUFJTA==");$GLOBALS["evFgehXIzQsJzBQvitfk"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgeW91ciBiYXNrZXQ=");$GLOBALS["zOKRBAeQOxNdbpuNgyXT"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgdGhlIGN1c3RvbWVy");$GLOBALS["xxjGWWQGNgfaTqwFSmUa"]=base64_decode("ICkgPGJyLz4=");$GLOBALS["qpOAsKfdhvQVxzPJQvGd"]=base64_decode("ICggIA==");$GLOBALS["TaEZvjvpjwAeJIYholUe"]=base64_decode("QW4gZXJyb3IgaGFzIG9jY3VycmVkIHdoaWxlIGZpbGxpbmcgdGhlIEVSUCBGRUFUVVJFIHRhYmxl");$GLOBALS["YcWYXFWErQHzMGHoM"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgbW9kdWxlIHRhYnM=");$GLOBALS["FOMuMQwkjONVxNXQVPIc"]=base64_decode("RGVhciBtZXJjaGFudCwgd2UgdGhhbmsgeW91IGZvciBoYXZpbmcgYWN0aXZhdGVkIHRoZSBGUkVFIHZlcnNpb24gb2Ygb3VyIDEtQ2xpY2sgRVJQIG1vZHVsZS4gRmluZCBpdCBkaXJlY3RseSBpbiB5b3VyIEJhY2sgT2ZmaWNlLCB0YWIgT3JkZXIuIElmIHlvdSB3YW50IHRvIGVucmljaCB5b3VyIEVSUCB3aXRoIHRoZSBhZHZhbmNlZCB2ZXJzaW9uIG9mIDEtQ2xpY2sgRVJQLCBwbGVhc2UgZ28gdG8geW91ciBtb2R1bGUgY29uZmlndXJhdGlvbiBvciBvbiBvdXIgc2hvcC4gV2Ugd2lzaCB5b3UgYSBnb29kIHVzZS4gaWxsaWNvUHJlc3RhIHRlYW0u");$GLOBALS["IgdCWhxbGMxbXRupOhBP"]=base64_decode("QXdhaXRpbmcgZm9yIHlvdXIgcGF5bWVudCwgdGhlIEZSRUUgdmVyc2lvbiBvZiBvdXIgRVJQIGhhcyBiZWVuIGluc3RhbGxlZCBvbiB5b3VyIHN0b3Jl");$GLOBALS["VxNQeJtefENTLBhHLjI"]=base64_decode("ZXJwX2xpY2VuY2VfcGFzc3dvcmQ=");$GLOBALS["KWcVAfkGUPBaeHWlFcvG"]=base64_decode("RVJQX0xJQ0VOQ0VfUEFTU1dPUkQ=");$GLOBALS["WLevEzElgeLWeJZvAHWs"]=base64_decode("RVJQX0lEX0NVU1RPTUVS");$GLOBALS["yqQYIGFLxMNAfWzHavhP"]=base64_decode("RVJQX0xJQ0VOQ0VfSUQ=");$GLOBALS["MKnkbspvbDdbcqegQQoM"]=base64_decode("RVJQX0JMQUNLTElTVA==");$GLOBALS["VUoVqjjyavKJiGZavNo"]=base64_decode("RVJQX0xBU1RfQ0hFQ0s=");$GLOBALS["tCJbYjSErHSjIohqNUQs"]=base64_decode("RVJQX1dTX0RBVEVfRU5E");$GLOBALS["NeEpoqFHXrKePHrDMboS"]=base64_decode("WS1tLWQ=");$GLOBALS["FCLFcSjkVdlauIuimkNe"]=base64_decode("RVJQX1dTX0RBVEU=");$GLOBALS["aaVSngfyKHLQgxZvwrY"]=base64_decode("MA==");$GLOBALS["umEwHHCeBqxcEOcTHxAX"]=base64_decode("RVJQX1dTX0NIRUNLX0NPVU5U");$GLOBALS["NxVdEObPygjIlcFMGZbt"]=base64_decode("RVJQX0xJQ0VOQ0VfVkFMSURJVFk=");$GLOBALS["ISvkzeQfmrkRwxYNyazT"]=base64_decode("RVJQX05FV19MSUNFTkNF");$GLOBALS["ZgFAvSOCyMDinBgpxnUe"]=base64_decode("RVJQX0xJQ0VOQ0U=");$GLOBALS["ShVnqhijbBrDKNPvYIx"]=base64_decode("ZXJwX3BhcnRuZXJfY29kZQ==");$GLOBALS["pqKioXvaTrtHWTzuRrCf"]=base64_decode("cGFydG5lcl9jb2Rl");$GLOBALS["yzrMWhLorpTCDMvHUaly"]=base64_decode("ZXJwX2tub3dsZWRnZV9zb3VyY2U=");$GLOBALS["bbkpzJfAFqScwdnKCpyt"]=base64_decode("a25vd2xlZGdlX3NvdXJjZV9pZA==");$GLOBALS["ZOOwgSqmvYuvrZeuXKQa"]=base64_decode("ZXJwX2NvbW1hbmRlX3ByZXZpc2lvbm5lbA==");$GLOBALS["uCQGgzovVSaISncFEYk"]=base64_decode("Zm9yY2FzdF9vcmRlcnM=");$GLOBALS["rgIkImLrAaQHjdciiuxP"]=base64_decode("bGFuZw==");$GLOBALS["CNLzEuQbbOCJlrfPvYNm"]=base64_decode("ZXJwX2NvbnRhY3RfbWFpbA==");$GLOBALS["VwCGqpUwTcGsnqOFNfAB"]=base64_decode("ZW1haWw=");$GLOBALS["RtEEIlDHwHYQyupibAkb"]=base64_decode("ZXJwX2NvbnRhY3RfbmFtZQ==");$GLOBALS["aSUcuRxxYGDxeyhLbbVE"]=base64_decode("bGFzdG5hbWU=");$GLOBALS["whWktQGORdPBTgkk"]=base64_decode("ZXJwX2NvbnRhY3RfZmlyc3RuYW1l");$GLOBALS["FhzXsRsmAttmXNINpnhh"]=base64_decode("Zmlyc3RuYW1l");$GLOBALS["ZtTLnfuojUXTQuWeLDMU"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgeW91ciBsaWNlbnNlOiBiYXNrZXQgaXMgZW1wdHk=");$GLOBALS["pAuGprrKFewNxolxOvlv"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgeW91ciBsaWNlbnNlOiBGUkVFIGJhc2tldCBjb3VsZCBub3QgYmUgYnVpbHQ=");$GLOBALS["MNMzzWTrQouLiRDzPMAS"]=base64_decode("PGJyLz4=");$GLOBALS["PKBpliVGOzMLjOSTWGVe"]=base64_decode("RXJyb3Igd2hpbGUgY3JlYXRpbmcgeW91ciBsaWNlbnNlOiBGUkVFIGJhc2tldCBpcyBlbXB0eQ==");$GLOBALS["HskBufLLFZBvoHaxOmtE"]=base64_decode("ZmVhdHVyZV9pZA==");$GLOBALS["hGdEnVHLImvWfeQjFGdH"]=base64_decode("bGljZW5jZV9pZA==");$GLOBALS["lRBzvzBSEQkJxdBItbg"]=base64_decode("LA==");$GLOBALS["tugkmwKQmrdyfghQnRJj"]=base64_decode("");$GLOBALS["QttgNPYyilGFircPjRiC"]=base64_decode("ZnJlZV9mZWF0dXJlX2lkcw==");$GLOBALS["SHlRCNLzGtCGyHhhetLl"]=base64_decode("MQ==");$GLOBALS["etAIzgaSWjlgBmChPHTh"]=base64_decode("ZXJwX2xpY2VuY2VfaXNfZnJlZQ==");$GLOBALS["rDKsaYfDjomnLBuzWpYS"]=base64_decode("RVJQX01TR19BRlRFUl9QUk9DRVNT");$GLOBALS["qPMNrYRVqpqSEXOyiXY"]=base64_decode("bGljZW5jZQ==");$GLOBALS["oVZHWpdaUpCbtPMUn"]=base64_decode("UE9TVA==");$GLOBALS["BDaMPJDEkzrtHxhVCxKz"]=base64_decode("RXJyb3IsIGdldCBhbGwgY29udGFpbmVycyBub3QgcmV0dXJuIG9iamVjdA==");$GLOBALS["AWObtEToEyfDiDGyPWNh"]=base64_decode("Y29udGFpbmVyLw==");$GLOBALS["LnvEFmofmkwnHzynKiyo"]=base64_decode("VGhlIGxpY2Vuc2UgbnVtYmVyIGlzIGVtcHR5");$GLOBALS["KLnlmulkfyQAVrvKLpMR"]=base64_decode("bGljZW5jZS9udW1iZXIv");$GLOBALS["JFtBmommUolcFYWLOPls"]=base64_decode("R0VU");$GLOBALS["tnMZqvbBJvvusEEHSslJ"]=base64_decode("fHw=");$GLOBALS["cbrTvcFIiLoLgpxjxk"]=base64_decode("UFNfU0hPUF9ET01BSU4=");$GLOBALS["ZMpzWrbXvKtcpIwBpbbT"]=base64_decode("MS1DTElDSyBFUlAgSUxMSUNPUFJFU1RBIDogdGhlIHdlYiBzZXJ2aWNlIGlzIHVucmVzcG9uc2l2ZSAhIFBsZWFzZSBjb250YWN0IHRoZSB0ZWNobmljYWwgc2VydmljZSBvZiBJTExJQ09QUkVTVEEgOiA=");$GLOBALS["QPCrVAetYOTZVaerSlQS"]=base64_decode("QXV0aG9yaXphdGlvbjogQmFzaWMg");$GLOBALS["jIPAoGJtNyFwSABslzfg"]=base64_decode("Q29udGVudC10eXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ=");$GLOBALS["LuQsgNjafvVeEGCyUjAj"]=base64_decode("Q29udGVudC10eXBlOiBtdWx0aXBhcnQvZm9ybS1kYXRh");$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]=base64_decode("bXNn");$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]=base64_decode("ZXJyb3I=");$GLOBALS["IbWtYJPBaCOKUwsHshdw"]=base64_decode("bG9naW4v");$GLOBALS["LYCTsgswZgVqphHCyzoD"]=base64_decode("bG9nby5wbmc=");$GLOBALS["QemmASyPFUMtJMptrith"]=base64_decode("bG9nby5naWY=");$GLOBALS["ZJSaSaWbWKPtkIGiTpoX"]=base64_decode("aW5kZXgucGhw");$GLOBALS["StnKKfRCvwqYVjHEZplk"]=base64_decode("Li4=");$GLOBALS["hQMtQEXNnpjUEYrLmOsm"]=base64_decode("Lg==");$GLOBALS["JuerXVGZipYmZZcsdk"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL3NxbA==");$GLOBALS["pCtdHKxfqAUiKUDQpUTn"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2pz");$GLOBALS["NEtLQJmAwGmAePmrLaWk"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NvbnRyb2xsZXJzL2FkbWlu");$GLOBALS["QfPFCWeSyUISNXklrfvL"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NvbnRyb2xsZXJz");$GLOBALS["hvTLkzDQuFSiWkwdTQwq"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NsYXNzZXMvc3RvY2s=");$GLOBALS["PtMbXxqvgMSrgFOvGsbv"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NsYXNzZXMvcGRm");$GLOBALS["SIelQdFoOcHABGfnT"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NsYXNzZXMvb3JkZXI=");$GLOBALS["eqqovHcRosVXMpqPMpYQ"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NsYXNzZXMvaGVscGVycw==");$GLOBALS["JlFWWSOjuXpTNuwRFGmm"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2NsYXNzZXM=");$GLOBALS["UHACrguvjfSDPwcGtBjg"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL2FqYXg=");$GLOBALS["mRYejzEeLVrTIWSYoQY"]=base64_decode("ZXJwaWxsaWNvcHJlc3Rh");$GLOBALS["JxnebyjdFidXdVzNqnEb"]=base64_decode("Lw==");$GLOBALS["AuupZJrtRueOixodsfE"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL21vZGVscy9FcnBGZWF0dXJlTGFuZy5waHA=");$GLOBALS["OfIvNRgWPISbOwFhPCsN"]=base64_decode("ZXJwaWxsaWNvcHJlc3RhL21vZGVscy9FcnBGZWF0dXJlLnBocA==");$GLOBALS["EIwnhjOPtzTfyzhwGXXs"]=base64_decode("Rk9SRUlHTiBLRVkgKGBsaWNlbmNlX2lkYCk=");$GLOBALS["FxswiikWGivLXchxTGc"]=base64_decode("Q2Fubm90IGFkZCBvciB1cGRhdGUgYSBjaGlsZCByb3c=");$GLOBALS["soAfcQdhHGSBoSEnDWkL"]=base64_decode("Zm9yIGtleSAnbnVtYmVyJw==");$GLOBALS["PoaDIHYWqwWIsVqZaPEk"]=base64_decode("Zm9yIGtleSAnZG9tYWluX25hbWUn");$GLOBALS["ZbBoKzoWxxTWAOhcFmWw"]=base64_decode("RHVwbGljYXRlIGVudHJ5");$GLOBALS["AzLTZjwTqXcFmgCOisuq"]=base64_decode("ZXJwX2F1dGhvcml6YXRpb25fdG9rZW4=");$GLOBALS["LSUftprGPcRshiZbDcPS"]=base64_decode("JXM/JXM=");$GLOBALS["aKGlyscZbZLojkwPlPmF"]=base64_decode("UFVU");$GLOBALS["PpOkdzyULDlhEeuSzVfX"]=base64_decode("UE9TVA==");$GLOBALS["mOyymmOwqmXSwLPoqCeS"]=base64_decode("eG1sIw==");$GLOBALS["nzaXraOpaQHjWSeCyXHr"]=base64_decode("I15jb25maWcuKg==");
?><?php require_once(_PS_MODULE_DIR_.$GLOBALS["OfIvNRgWPISbOwFhPCsN"]); require_once(_PS_MODULE_DIR_.$GLOBALS["AuupZJrtRueOixodsfE"]); class Licence extends ErpIllicopresta { public $honGMkOvtIGTfwnRfoAD; public $error; public $number; public function __construct() { parent::__construct(); } public static function getChecksum($doBjzQqZAQeifNrXWyef) { $fucyDmicluApBowDryPg = opendir($doBjzQqZAQeifNrXWyef); if ($fucyDmicluApBowDryPg && in_array($doBjzQqZAQeifNrXWyef, self::getListToChecksum())) { while ($file = readdir($fucyDmicluApBowDryPg)) { if (!in_array($file, self::getExcludeList($file))) { if (!is_dir($doBjzQqZAQeifNrXWyef.$GLOBALS["JxnebyjdFidXdVzNqnEb"].$file)) { array_push(ErpIllicopresta::$checksum, md5_file($doBjzQqZAQeifNrXWyef.'/'.$file)); } else { Licence::getChecksum($doBjzQqZAQeifNrXWyef.$GLOBALS["JxnebyjdFidXdVzNqnEb"].$file); } } } return true; } return false; } private static function getListToChecksum() { return array( _PS_MODULE_DIR_.'erpillicopresta', _PS_MODULE_DIR_.'erpillicopresta/ajax', _PS_MODULE_DIR_.'erpillicopresta/classes', _PS_MODULE_DIR_.'erpillicopresta/classes/helpers', _PS_MODULE_DIR_.'erpillicopresta/classes/order', _PS_MODULE_DIR_.'erpillicopresta/classes/pdf', _PS_MODULE_DIR_.'erpillicopresta/classes/stock', _PS_MODULE_DIR_.'erpillicopresta/controllers', _PS_MODULE_DIR_.'erpillicopresta/controllers/admin', _PS_MODULE_DIR_.'erpillicopresta/js', _PS_MODULE_DIR_.'erpillicopresta/sql' ); } private static function getExcludeList($file) { $kDVpkXQTSQlUCYiscTEi = array( '.', '..', 'index.php', 'logo.gif', 'logo.png' ); if (preg_match($GLOBALS["nzaXraOpaQHjWSeCyXHr"]."\.".$GLOBALS["mOyymmOwqmXSwLPoqCeS"], $file)) array_push($kDVpkXQTSQlUCYiscTEi,$file); return $kDVpkXQTSQlUCYiscTEi; } public function callApi($vrstHNSvOFfFjAogPUc, $url, $data = false) { $KrphmzNsXVnNWZvGIcug = false; if( strpos($url, $GLOBALS["IbWtYJPBaCOKUwsHshdw"]) === false ) { $AVgUphRvwKSCOiHZRlKi = $this->getAuthorizationToken(); if( $AVgUphRvwKSCOiHZRlKi[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) $KrphmzNsXVnNWZvGIcug = $AVgUphRvwKSCOiHZRlKi[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]; else { $nReFMYFQynFmLZUyDmMP = new stdClass(); $nReFMYFQynFmLZUyDmMP->msg = $AVgUphRvwKSCOiHZRlKi[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]; $nReFMYFQynFmLZUyDmMP->error = true; $nReFMYFQynFmLZUyDmMP->status = 400; return $nReFMYFQynFmLZUyDmMP; } } $JrRPYJSWKTTWDjYHpPdG = array(); $UwDRehpWQRMbVIwjztYX = curl_init(); switch ($vrstHNSvOFfFjAogPUc) { case $GLOBALS["PpOkdzyULDlhEeuSzVfX"]: if(is_array($data)) $JrRPYJSWKTTWDjYHpPdG[] = $GLOBALS["LuQsgNjafvVeEGCyUjAj"]; curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_POST, 1); if ($data) curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_POSTFIELDS, $data); break; case $GLOBALS["aKGlyscZbZLojkwPlPmF"]: $JrRPYJSWKTTWDjYHpPdG[] = $GLOBALS["jIPAoGJtNyFwSABslzfg"]; if(is_array($data)) $data = http_build_query($data); curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_POST, true); curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_CUSTOMREQUEST, $GLOBALS["aKGlyscZbZLojkwPlPmF"]); curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_POSTFIELDS, $data); break; default: if ($data) $url = sprintf($GLOBALS["LSUftprGPcRshiZbDcPS"], $url, http_build_query($data)); } if( $KrphmzNsXVnNWZvGIcug !== false ) $JrRPYJSWKTTWDjYHpPdG[] = $GLOBALS["QPCrVAetYOTZVaerSlQS"] . $KrphmzNsXVnNWZvGIcug; if( !empty($JrRPYJSWKTTWDjYHpPdG)) curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_HTTPHEADER, $JrRPYJSWKTTWDjYHpPdG); curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_URL, ERP_WS.$url); curl_setopt($UwDRehpWQRMbVIwjztYX, CURLOPT_RETURNTRANSFER, true); $result = curl_exec($UwDRehpWQRMbVIwjztYX); if( $result === false) { echo $this->l($GLOBALS["ZMpzWrbXvKtcpIwBpbbT"]).ERP_EMAIL_SUPPORT; exit(); } curl_close($UwDRehpWQRMbVIwjztYX); return Tools::jsonDecode($result); } public function getAuthorizationToken() { if( !isset($_COOKIE[$GLOBALS["AzLTZjwTqXcFmgCOisuq"]]) || empty($_COOKIE[$GLOBALS["AzLTZjwTqXcFmgCOisuq"]])) { $url = $GLOBALS["IbWtYJPBaCOKUwsHshdw"].Configuration::get($GLOBALS["cbrTvcFIiLoLgpxjxk"]).$GLOBALS["JxnebyjdFidXdVzNqnEb"].base64_encode( sha1(Configuration::get($GLOBALS["cbrTvcFIiLoLgpxjxk"])).$GLOBALS["tnMZqvbBJvvusEEHSslJ"].PRIVATE_KEY); $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $url); if(is_object($result) && $result->error == false && $result->status == 200) { $INgShcwdFZsgPBHMYbUl = time() + 60*60; setcookie($GLOBALS["AzLTZjwTqXcFmgCOisuq"], $result->msg , $INgShcwdFZsgPBHMYbUl); return array( 'error' => false, 'msg' => $result->msg ); } else { return array( 'error' => true, 'msg' => $result->msg ); } } else { return array( 'error' => false, 'msg' => $_COOKIE["erp_authorization_token"] ); } } public function getLicenceByNumber() { if (!empty($this->number)) { $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $GLOBALS["KLnlmulkfyQAVrvKLpMR"].$this->number, false); if(is_object($result) && $result->error == false && $result->status == 200) { return array( 'error' => false, 'msg' => $result->msg[0] ); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } else { return array( 'error' => true, 'msg' => $this->l('The license number is empty')); } } public function getAllContainers() { $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $GLOBALS["AWObtEToEyfDiDGyPWNh"].$this->context->language->iso_code, false); if(is_object($result) && $result->error == false && $result->status == 200) { return array( 'error' => false, 'msg' => $result->msg ); } else { $this->error = isset($result->msg) ? $result->msg : $this->l($GLOBALS["BDaMPJDEkzrtHxhVCxKz"]); return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function addLicence() { $result = $this->callApi($GLOBALS["oVZHWpdaUpCbtPMUn"], $GLOBALS["qPMNrYRVqpqSEXOyiXY"], $this->honGMkOvtIGTfwnRfoAD); if(is_object($result) && ( ($result->error == false && $result->status == 200) || ( $result->error == true && $result->status == 300 ) )) { if( $result->status == 300 ) Configuration::updateValue($GLOBALS["rDKsaYfDjomnLBuzWpYS"], htmlentities($this->displayError($result->warning))); $licence_is_free = Tools::getValue($GLOBALS["etAIzgaSWjlgBmChPHTh"], null) === $GLOBALS["SHlRCNLzGtCGyHhhetLl"] ? true : false; $licence_id = $result->msg; $ybBTGusmYWHrOZDmacGj = array(); if(Tools::isSubmit('free_feature_ids') && Tools::getValue($GLOBALS["QttgNPYyilGFircPjRiC"]) != $GLOBALS["tugkmwKQmrdyfghQnRJj"]) { $MMsMaLOMEpRvNvuPc = Tools::getValue($GLOBALS["QttgNPYyilGFircPjRiC"]); $JLjWcAnwGlCDVlXOLfly = explode($GLOBALS["lRBzvzBSEQkJxdBItbg"], $MMsMaLOMEpRvNvuPc); if(!empty($JLjWcAnwGlCDVlXOLfly)) { foreach ($JLjWcAnwGlCDVlXOLfly as $nYrgzimvpAxbzfaJBDUd) if(!empty($nYrgzimvpAxbzfaJBDUd)) $ybBTGusmYWHrOZDmacGj[] = array('licence_id' => $licence_id, 'feature_id' => $nYrgzimvpAxbzfaJBDUd); } else return array( 'error' => true, 'msg' => $this->l('Error while creating your license: FREE basket is empty').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else return array( 'error' => true, 'msg' => $this->l('Error while creating your license: FREE basket could not be built').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); if(empty($ybBTGusmYWHrOZDmacGj)) return array('error' => true, 'msg' => $this->l('Error while creating your license: basket is empty').$GLOBALS["MNMzzWTrQouLiRDzPMAS"]); $this->honGMkOvtIGTfwnRfoAD = $ybBTGusmYWHrOZDmacGj; $MyccGWiPMFVCRlQszsra = $this->addBasket(); if( $MyccGWiPMFVCRlQszsra[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { $this->honGMkOvtIGTfwnRfoAD = array( 'firstname' => Tools::getValue('erp_contact_firstname', null), $GLOBALS["aSUcuRxxYGDxeyhLbbVE"] => Tools::getValue($GLOBALS["RtEEIlDHwHYQyupibAkb"], null), $GLOBALS["VwCGqpUwTcGsnqOFNfAB"] => Tools::getValue($GLOBALS["CNLzEuQbbOCJlrfPvYNm"], null), $GLOBALS["rgIkImLrAaQHjdciiuxP"] => $this->context->language->iso_code, $GLOBALS["uCQGgzovVSaISncFEYk"] => Tools::getValue($GLOBALS["ZOOwgSqmvYuvrZeuXKQa"], null), $GLOBALS["hGdEnVHLImvWfeQjFGdH"] => $licence_id, $GLOBALS["bbkpzJfAFqScwdnKCpyt"] => Tools::getValue($GLOBALS["yzrMWhLorpTCDMvHUaly"], 1), $GLOBALS["pqKioXvaTrtHWTzuRrCf"] => Tools::getValue($GLOBALS["ShVnqhijbBrDKNPvYIx"], null), ); $sqxtToSjtVqflptOZFSL = $this->addCustomer(); if( $sqxtToSjtVqflptOZFSL[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { $ZLdblisEgawTrMDRRTmR = $this->fillErpFeatureTable(); if( $ZLdblisEgawTrMDRRTmR[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { if ($this->installModuleTabs()) { Configuration::updateValue($GLOBALS["ZgFAvSOCyMDinBgpxnUe"], $this->number); Configuration::updateValue($GLOBALS["ISvkzeQfmrkRwxYNyazT"], $GLOBALS["tugkmwKQmrdyfghQnRJj"]); Configuration::updateValue($GLOBALS["NxVdEObPygjIlcFMGZbt"], $GLOBALS["SHlRCNLzGtCGyHhhetLl"]); Configuration::updateValue($GLOBALS["umEwHHCeBqxcEOcTHxAX"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); Configuration::updateValue($GLOBALS["FCLFcSjkVdlauIuimkNe"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["tCJbYjSErHSjIohqNUQs"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"], time() + (60*60*24*30))); Configuration::updateValue($GLOBALS["VUoVqjjyavKJiGZavNo"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["MKnkbspvbDdbcqegQQoM"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); Configuration::updateValue($GLOBALS["yqQYIGFLxMNAfWzHavhP"], $result->msg); Configuration::updateValue($GLOBALS["WLevEzElgeLWeJZvAHWs"], $sqxtToSjtVqflptOZFSL[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]); Configuration::updateValue($GLOBALS["KWcVAfkGUPBaeHWlFcvG"], Tools::getValue($GLOBALS["VxNQeJtefENTLBhHLjI"])); if($licence_is_free === false) { $OLDDiYYwKsfhpArdwhKK = $this->l($GLOBALS["IgdCWhxbGMxbXRupOhBP"]); Configuration::updateValue($GLOBALS["rDKsaYfDjomnLBuzWpYS"], htmlentities($this->displayConfirmation($OLDDiYYwKsfhpArdwhKK)).$GLOBALS["MNMzzWTrQouLiRDzPMAS"].Configuration::get($GLOBALS["rDKsaYfDjomnLBuzWpYS"])); } return array( 'error' => false, 'msg' => $this->l('Dear merchant, we thank you for having activated the FREE version of our 1-Click ERP module. Find it directly in your Back Office, tab Order. If you want to enrich your ERP with the advanced version of 1-Click ERP, please go to your module configuration or on our shop. We wish you a good use. illicoPresta team.').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else return array( 'error' => true, 'msg' => $this->l('Error while creating module tabs').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else return array( 'error' => true, 'msg' => $this->l('An error has occurred while filling the ERP FEATURE table').$GLOBALS["qpOAsKfdhvQVxzPJQvGd"].$ZLdblisEgawTrMDRRTmR[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["xxjGWWQGNgfaTqwFSmUa"] ); } else return array( 'error' => true, 'msg' => $this->l('Error while creating the customer').$GLOBALS["qpOAsKfdhvQVxzPJQvGd"].$sqxtToSjtVqflptOZFSL[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["xxjGWWQGNgfaTqwFSmUa"] ); } else return array( 'error' => true, 'msg' => $this->l('Error while creating your basket').$GLOBALS["qpOAsKfdhvQVxzPJQvGd"].$MyccGWiPMFVCRlQszsra[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["xxjGWWQGNgfaTqwFSmUa"] ); } else { $this->uninstallModuleTabs(); self::resetLicence(); $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function loadExistingLicence() { $result = $this->getLicenceByNumber(); if( $result[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { $ZLdblisEgawTrMDRRTmR = $this->fillErpFeatureTable(); if( $ZLdblisEgawTrMDRRTmR[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { if ($this->installModuleTabs()) { Configuration::updateValue($GLOBALS["NxVdEObPygjIlcFMGZbt"], $GLOBALS["SHlRCNLzGtCGyHhhetLl"]); Configuration::updateValue($GLOBALS["umEwHHCeBqxcEOcTHxAX"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); Configuration::updateValue($GLOBALS["FCLFcSjkVdlauIuimkNe"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["tCJbYjSErHSjIohqNUQs"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"], time() + (60*60*24*30))); Configuration::updateValue($GLOBALS["VUoVqjjyavKJiGZavNo"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["MKnkbspvbDdbcqegQQoM"], false); Configuration::updateValue($GLOBALS["yqQYIGFLxMNAfWzHavhP"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->id); Configuration::updateValue($GLOBALS["UQsEHLszAYlyfnbMGGk"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->email); Configuration::updateValue($GLOBALS["wzzfqgZKnbukbxFQhtkB"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->domain_name); return array( 'error' => false, 'msg' => $this->l('Licence updated successfully').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else return array( 'error' => true, 'msg' => $this->l('Licence updated successfully but unable to install tabs').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else { $ilmsazvsYBnyCdIPYdFa = $this->l($GLOBALS["LWhRwbOUYNvYECjggJaX"]).$this->number.$GLOBALS["JMtQvBhmyWNVNJolpHHV"]; $ilmsazvsYBnyCdIPYdFa .= $this->l($GLOBALS["txCprGEQNSPQOMBPVExe"]).$GLOBALS["OUIJuJtYgyjVSTORhV"].$result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["RWObqGbdJwbsezdnwnLr"]; $ilmsazvsYBnyCdIPYdFa .= $GLOBALS["iKLyShFQlpjmJpFfaoec"].sprintf($this->l($GLOBALS["FQdxHopNHudYlkJPNZUx"]), ERP_EMAIL_SUPPORT); return array( 'error' => true, 'msg' => $ilmsazvsYBnyCdIPYdFa.' <br/> ' ); } } else { $this->uninstallModuleTabs(); self::resetLicence(); $ilmsazvsYBnyCdIPYdFa = $this->l($GLOBALS["IzqxgCddCNcqAMfutkYh"]).$GLOBALS["iKLyShFQlpjmJpFfaoec"].$this->number.$GLOBALS["SNfdgoKoslJWjhJnHGYM"]; $ilmsazvsYBnyCdIPYdFa .= $this->l($GLOBALS["pibURrQljukNkfFntCPM"]).$GLOBALS["OUIJuJtYgyjVSTORhV"].$result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["RWObqGbdJwbsezdnwnLr"]; $ilmsazvsYBnyCdIPYdFa .= sprintf($this->l($GLOBALS["FQdxHopNHudYlkJPNZUx"]), ERP_EMAIL_SUPPORT); return array( 'error' => true, 'msg' => $ilmsazvsYBnyCdIPYdFa.' <br/> '); } } public function loadLicence() { $result = $this->getLicenceByNumber(); if( $result[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { $eCRDEFkgPhShFMokLzyJ = Tools::getShopDomain(false, true); $TZiCpncKMLnUDAaCNESU = explode($GLOBALS["IUgWIOIxZidNBsgpHMEl"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->domain_name); $SEScNPunpDoxbRzpQygO = $TZiCpncKMLnUDAaCNESU[0]; if((Tools::isSubmit($GLOBALS["ppkhrmwRxzbgySjUsLMn"])) && ((!$this->isDevelopper($eCRDEFkgPhShFMokLzyJ) && $eCRDEFkgPhShFMokLzyJ != $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->domain_name) || ($this->isDevelopper($eCRDEFkgPhShFMokLzyJ) && !$this->isDevelopper($SEScNPunpDoxbRzpQygO)))) { if(strpos($result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->domain_name, $GLOBALS["IUgWIOIxZidNBsgpHMEl"]) > 0) { $url = MIGRATION_URL.$GLOBALS["YhTQMCwCqYGdCrqaC"].urlencode(base64_encode(sha1($GLOBALS["ClEbTDxIePPNwbOJAybr"]).$GLOBALS["tnMZqvbBJvvusEEHSslJ"].PRIVATE_KEY.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$eCRDEFkgPhShFMokLzyJ.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$SEScNPunpDoxbRzpQygO.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$this->context->language->iso_code)); return array( 'error' => true, 'msg' => $this->l('Your license have to be associated with the domain of your shop. Free migration is required').$GLOBALS["REJmPZxDrLSczPWVBSJI"].$url.$GLOBALS["scLOKdfEMtKJsTQbNkOo"].$this->l($GLOBALS["SdybIecNzeRjfOJnOuoy"]).$GLOBALS["QedvCpNUYUjfTreizOIs"] ); } else { $url = MIGRATION_URL.$GLOBALS["YhTQMCwCqYGdCrqaC"].urlencode(base64_encode(sha1($GLOBALS["vlvwWvMwxUWYOwUerYuw"]).$GLOBALS["tnMZqvbBJvvusEEHSslJ"].PRIVATE_KEY.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$eCRDEFkgPhShFMokLzyJ.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$SEScNPunpDoxbRzpQygO.$GLOBALS["tnMZqvbBJvvusEEHSslJ"].$this->context->language->iso_code)); return array( 'error' => true, 'msg' => $this->l('Your license is already associated with another domain. A migration fee is requied').$GLOBALS["REJmPZxDrLSczPWVBSJI"].$url.$GLOBALS["scLOKdfEMtKJsTQbNkOo"].$this->l($GLOBALS["SdybIecNzeRjfOJnOuoy"]).$GLOBALS["QedvCpNUYUjfTreizOIs"] ); } } else { $ZLdblisEgawTrMDRRTmR = $this->fillErpFeatureTable(); if( $ZLdblisEgawTrMDRRTmR[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { if ($this->installModuleTabs()) { Configuration::updateValue($GLOBALS["ZgFAvSOCyMDinBgpxnUe"], $this->number); Configuration::updateValue($GLOBALS["NxVdEObPygjIlcFMGZbt"], $GLOBALS["SHlRCNLzGtCGyHhhetLl"]); Configuration::updateValue($GLOBALS["umEwHHCeBqxcEOcTHxAX"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); Configuration::updateValue($GLOBALS["FCLFcSjkVdlauIuimkNe"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["tCJbYjSErHSjIohqNUQs"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"], time() + (60*60*24*30))); Configuration::updateValue($GLOBALS["VUoVqjjyavKJiGZavNo"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); Configuration::updateValue($GLOBALS["MKnkbspvbDdbcqegQQoM"], false); Configuration::updateValue($GLOBALS["yqQYIGFLxMNAfWzHavhP"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->id); Configuration::updateValue($GLOBALS["UQsEHLszAYlyfnbMGGk"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->email); Configuration::updateValue($GLOBALS["wzzfqgZKnbukbxFQhtkB"], $result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->domain_name); return array( 'error' => false, 'msg' => $this->l('Licence updated successfully').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else return array( 'error' => true, 'msg' => $this->l('Your license is valid but an error has occurred during the installation of Module Tabs').$GLOBALS["MNMzzWTrQouLiRDzPMAS"] ); } else { $ilmsazvsYBnyCdIPYdFa = $this->l($GLOBALS["qVizbgtghNtymEnCqFBW"]).$GLOBALS["OUIJuJtYgyjVSTORhV"].$ZLdblisEgawTrMDRRTmR[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["RWObqGbdJwbsezdnwnLr"]; $ilmsazvsYBnyCdIPYdFa .= sprintf($this->l($GLOBALS["FQdxHopNHudYlkJPNZUx"]), ERP_EMAIL_SUPPORT); return array( 'error' => true, 'msg' => $ilmsazvsYBnyCdIPYdFa.' <br/> '.$result['msg'] ); } } } else { $this->uninstallModuleTabs(); self::resetLicence(); $ilmsazvsYBnyCdIPYdFa = $this->l($GLOBALS["RqSFxSZuapgSkALRIFlj"]). $GLOBALS["OUIJuJtYgyjVSTORhV"].$result[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["REulxJwdjMXctpffxyst"]; return array( 'error' => true, 'msg' => $ilmsazvsYBnyCdIPYdFa ); } } public function updateLicence($YmuoYyIbpIqyNUMzjwLW) { $hvOGujpysZHleGIbhcir = $this->getLicenceByNumber(); if($hvOGujpysZHleGIbhcir[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false && (int)$hvOGujpysZHleGIbhcir[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]->id > 0) { $ADdqHZMqHTBehclsY = $hvOGujpysZHleGIbhcir[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]; $this->honGMkOvtIGTfwnRfoAD = array( 'number' => $ADdqHZMqHTBehclsY->number, 'mode' => $ADdqHZMqHTBehclsY->mode, 'email' => $ADdqHZMqHTBehclsY->email, 'password' => $ADdqHZMqHTBehclsY->password, 'domain_name' => $ADdqHZMqHTBehclsY->domain_name, 'active' => $ADdqHZMqHTBehclsY->active, 'blacklist' => $ADdqHZMqHTBehclsY->blacklist, 'date_add' => $ADdqHZMqHTBehclsY->date_add, 'date_upd' => date('Y-m-d H:i:s'), $GLOBALS["gpAWdPEaVxhufbJBaZVZ"] => $ADdqHZMqHTBehclsY->date_end, ); $this->honGMkOvtIGTfwnRfoAD = array_merge($this->honGMkOvtIGTfwnRfoAD, $YmuoYyIbpIqyNUMzjwLW); $result = $this->callApi($GLOBALS["ZMEdiyXsYGIDgIKLyAzA"], $GLOBALS["VjRMRXPYLXwIcucCfMCl"].(int)$ADdqHZMqHTBehclsY->id, $this->honGMkOvtIGTfwnRfoAD); if(is_object($result) && $result->error == false && $result->status == 200) { Configuration::updateValue($GLOBALS["FCLFcSjkVdlauIuimkNe"], date($GLOBALS["NeEpoqFHXrKePHrDMboS"])); return array( 'error' => false, 'msg' => $this->l('License successfully updated')); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } else { return array( 'error' => true, 'msg' => $this->l('Error while getting your licence').$GLOBALS["OUIJuJtYgyjVSTORhV"].$hvOGujpysZHleGIbhcir[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]].$GLOBALS["REulxJwdjMXctpffxyst"] ); } } public static function resetLicence() { Db::getInstance()->delete($GLOBALS["pGCdlesQpKMafhWdNpQl"]); Configuration::deleteByName($GLOBALS["lTcjZFVGeTQslgELoQtc"]); Configuration::deleteByName($GLOBALS["FCLFcSjkVdlauIuimkNe"]); Configuration::updateValue($GLOBALS["NxVdEObPygjIlcFMGZbt"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); Configuration::updateValue($GLOBALS["umEwHHCeBqxcEOcTHxAX"], $GLOBALS["aaVSngfyKHLQgxZvwrY"]); } public function addBasket() { $this->honGMkOvtIGTfwnRfoAD = $GLOBALS["eeaWaMCfAxEsNHSwVohq"].serialize($this->honGMkOvtIGTfwnRfoAD); $result = $this->callApi($GLOBALS["oVZHWpdaUpCbtPMUn"], $GLOBALS["ynlqpVNrmGMwTXUwlVQj"], $this->honGMkOvtIGTfwnRfoAD); if(is_object($result) && $result->error == false && $result->status == 200) { return array( 'error' => false, 'msg' => $result->msg ); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function updateBasket() { $this->honGMkOvtIGTfwnRfoAD = $GLOBALS["eeaWaMCfAxEsNHSwVohq"].serialize($this->honGMkOvtIGTfwnRfoAD); $result = $this->callApi($GLOBALS["ZMEdiyXsYGIDgIKLyAzA"], $GLOBALS["ynlqpVNrmGMwTXUwlVQj"], $this->honGMkOvtIGTfwnRfoAD); if(is_object($result) && $result->error == false && $result->status == 200) { $EwvSsLZjjNzGSvwAJARP = $this->loadLicence(); if( $EwvSsLZjjNzGSvwAJARP[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) return array( 'error' => false, 'msg' => $EwvSsLZjjNzGSvwAJARP['msg']); else return array( 'error' => true, 'msg' => $this->l('Your basket has been updated but the following error has been detected: ').$EwvSsLZjjNzGSvwAJARP[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]]); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function getCurrentBasket( $WtHAaLktuFKvFCaMWXIs = false ) { $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $GLOBALS["LOrOcfYfzRCQzRNJPZSP"].$this->number, null); if(is_object($result) && $result->error == false && $result->status == 200 && isset($result->msg) && !empty($result->msg)) { $aXxMRAqSwgHPjabXriqC = $result->msg; if( $WtHAaLktuFKvFCaMWXIs ) { $vkIIORlhOajWasbHPZfM = array(); $XgHMiuegsGariwnaGFVM = array(); $qTDepZumRkyICQyWqdls = array(); $BbrGyGNCrfZxkGBTliKZ['globa_level_selected'] = null; foreach ($aXxMRAqSwgHPjabXriqC as $ybBTGusmYWHrOZDmacGj) { $vkIIORlhOajWasbHPZfM[$GLOBALS["HskBufLLFZBvoHaxOmtE"]][] = $ybBTGusmYWHrOZDmacGj->feature_id; $XgHMiuegsGariwnaGFVM[$GLOBALS["MpDsASENBpuuUwkThHsu"]][] = $ybBTGusmYWHrOZDmacGj->id; if( !array_key_exists($ybBTGusmYWHrOZDmacGj->level_id, $qTDepZumRkyICQyWqdls) ) $qTDepZumRkyICQyWqdls[$ybBTGusmYWHrOZDmacGj->level_id] = 0; else { $qTDepZumRkyICQyWqdls[$ybBTGusmYWHrOZDmacGj->level_id]++; if( isset($qTDepZumRkyICQyWqdls[2]) && $qTDepZumRkyICQyWqdls[2] == 5) { $BbrGyGNCrfZxkGBTliKZ[$GLOBALS["mtMUkbfBgZxCPGgIqApX"]] = 2; } else if( $qTDepZumRkyICQyWqdls[$ybBTGusmYWHrOZDmacGj->level_id] == (count($aXxMRAqSwgHPjabXriqC) -1 )) $BbrGyGNCrfZxkGBTliKZ[$GLOBALS["mtMUkbfBgZxCPGgIqApX"]] = $ybBTGusmYWHrOZDmacGj->level_id; } } return array( 'error' => false, 'msg' => array_merge($vkIIORlhOajWasbHPZfM, $XgHMiuegsGariwnaGFVM, $BbrGyGNCrfZxkGBTliKZ)); } return array( 'error' => false, 'msg' => $result->msg ); } else return array( 'error' => true, 'msg' => array( 'feature_id' => array(), 'basket_id' => array(), 'globa_level_selected' => array() ) ); } public function getControllers() { $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $GLOBALS["gQhBWbyOTVyGIxJZTUlb"].$this->number, null); if(is_object($result) && $result->error == false && $result->status == 200) { return array( 'error' => false, 'msg' => $result->msg ); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function getKnowledgeSource() { $result = $this->callApi($GLOBALS["JFtBmommUolcFYWLOPls"], $GLOBALS["pJYiGmLHfkQbGwXeMkxQ"].$this->context->language->iso_code, null); if(is_object($result) && $result->error == false && $result->status == 200) { $jRERHaISRulXDDadHHjV = array(); if( !empty($result->msg)) { foreach($result->msg as $source) { $jRERHaISRulXDDadHHjV[] = array( 'Id' => $source->id, 'Value' => $source->name ); } } return $jRERHaISRulXDDadHHjV; } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function fillErpFeatureTable() { Db::getInstance()->delete($GLOBALS["pGCdlesQpKMafhWdNpQl"]); $ScowBEZvUCNsxCosnQEi = $this->getControllers(); if( $ScowBEZvUCNsxCosnQEi[$GLOBALS["qLdwVIlSFvZlEhjXrCsm"]] == false ) { if( !empty($ScowBEZvUCNsxCosnQEi[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]])) { foreach($ScowBEZvUCNsxCosnQEi[$GLOBALS["IfDOJLXpvVPUcjFdWhqj"]] as $controller) { $wYyMBDIJBDYiocLnYtxK = new ErpFeature(); $wYyMBDIJBDYiocLnYtxK->id_erpip_feature = NULL; $wYyMBDIJBDYiocLnYtxK->picture = $controller->picture; $wYyMBDIJBDYiocLnYtxK->controller = $controller->controller; $wYyMBDIJBDYiocLnYtxK->is_root = $controller->root; $wYyMBDIJBDYiocLnYtxK->order = $controller->order; $wYyMBDIJBDYiocLnYtxK->status = $controller->status; $wYyMBDIJBDYiocLnYtxK->key1 = $controller->key1; $wYyMBDIJBDYiocLnYtxK->key2 = $controller->key2; $wYyMBDIJBDYiocLnYtxK = $wYyMBDIJBDYiocLnYtxK->save(); if( !empty($controller->langs) && $wYyMBDIJBDYiocLnYtxK ) { $MVQVfRjWXVHTQYGFbqWI = Db::getInstance()->Insert_ID(); foreach ($controller->langs as $ZUFCbUZgomFnOEconImd ) { $rmMFpPwiEsNUoXtAtZst = new ErpFeatureLang(); $rmMFpPwiEsNUoXtAtZst->id_erpip_feature_language = NULL; $rmMFpPwiEsNUoXtAtZst->id_erpip_feature = (int)$MVQVfRjWXVHTQYGFbqWI; $rmMFpPwiEsNUoXtAtZst->iso_code = $ZUFCbUZgomFnOEconImd->iso_code; $rmMFpPwiEsNUoXtAtZst->name = $ZUFCbUZgomFnOEconImd->name; $rmMFpPwiEsNUoXtAtZst->save(); } } } return array( 'error' => false, 'msg' => ''); } } else { return array( 'error' => true, 'msg' => $ScowBEZvUCNsxCosnQEi['msg']); } } public function addCustomer() { $result = $this->callApi($GLOBALS["oVZHWpdaUpCbtPMUn"], $GLOBALS["tTNVJUzrJhllDhrUzpQI"], $this->honGMkOvtIGTfwnRfoAD); if(is_object($result) && ( ($result->error == false && $result->status == 200) || ( $result->error == true && $result->status == 300 ) )) { if( $result->status == 300 ) { Configuration::updateValue($GLOBALS["rDKsaYfDjomnLBuzWpYS"], Configuration::get($GLOBALS["rDKsaYfDjomnLBuzWpYS"]).htmlentities($this->displayError($result->warning))); } return array( 'error' => false, 'msg' => $result->msg ); } else { $this->error = $result->msg; return array( 'error' => true, 'msg' => $this->parseSqlError() ); } } public function parseSqlError() { preg_match($GLOBALS["hjiwRYFmqZAZKxwZwWaD"], $this->error, $matches); if( !empty($matches) && isset($matches[1]) ) { switch ($matches[1]) { case 23000 : if( strpos($this->error, $GLOBALS["ZbBoKzoWxxTWAOhcFmWw"]) !== false ) { if(strpos($this->error, $GLOBALS["PoaDIHYWqwWIsVqZaPEk"]) !== false ) $this->error = $this->l($GLOBALS["SPsYiKLPQjCvYBksjfRX"]); if(strpos($this->error, $GLOBALS["soAfcQdhHGSBoSEnDWkL"]) !== false ) $this->error = $this->l($GLOBALS["vbpFfCglfBLcFHDQdIcN"]); else $this->error = $this->l($GLOBALS["ZzIFTUrREDgfrExeUGKa"]).$GLOBALS["OUIJuJtYgyjVSTORhV"].$this->error.$GLOBALS["REulxJwdjMXctpffxyst"]; } else if(strpos($this->error, $GLOBALS["FxswiikWGivLXchxTGc"]) !== false && strpos($this->error, $GLOBALS["EIwnhjOPtzTfyzhwGXXs"]) !== false) $this->error = $GLOBALS["exPxRKSbeUKkJPvUQOkY"].$this->error.$GLOBALS["uDLvPjWiPkpeGATQxoVs"]; else $this->error = $GLOBALS["exPxRKSbeUKkJPvUQOkY"].$this->error.$GLOBALS["uDLvPjWiPkpeGATQxoVs"]; break; default : $this->error = $GLOBALS["exPxRKSbeUKkJPvUQOkY"].$this->error.$GLOBALS["uDLvPjWiPkpeGATQxoVs"]; break; } } return $this->error; } public function l($string, $class = 'ErpConfiguration', $addslashes = false, $htmlentities = false) { if (!empty($class)) { $str = ErpIllicopresta::findTranslation($GLOBALS["mRYejzEeLVrTIWSYoQY"], $string, $GLOBALS["ODZTpstcnTBaUJZqpfTr"]); $str = $htmlentities ? htmlentities($str, ENT_QUOTES, $GLOBALS["lcnnGKpkLUDfXFppRXDd"]) : $str; return str_replace($GLOBALS["enNqNaCvEaCEJfTuGZEY"], $GLOBALS["BUcwZjmlMYHUljJmew"], ($addslashes ? addslashes($str) : Tools::stripslashes($str))); } } } ?>').'<?php '); ?>